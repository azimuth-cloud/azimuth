---

- name: Create guacamole network
  docker_network:
    name: guacamole

- name: Start guacamole server
  docker_container:
    name: guacamole-server
    image: "{{ guacamole_server_image }}"
    pull: "{{ guacamole_server_image_pull }}"
    container_default_behavior: no_defaults
    detach: yes
    restart_policy: unless-stopped
    network_mode: guacamole
    networks:
      - name: guacamole
    networks_cli_compatible: yes
    state: started

- name: Ensure guacamole config directory exists
  file:
    path: /etc/guacamole/ssh-auth
    state: directory

# Generate an RSA keypair for guacamole to use to authenticate with the host
# At the time of writing, Guacamole does not support new-style OpenSSH keys
#   See: https://issues.apache.org/jira/browse/GUACAMOLE-745

# Also, at the time of writing the community.crypto.openssh_keypair module has
#Â a parameter called private_key_format, but the only valid value is "auto"
# which uses the default OpenSSH format

# So we have to use ssh-keygen directly to generate the keypair
- name: Generate SSH keypair for local SSH auth
  command: >
    ssh-keygen -m PEM -t rsa -b 3072 -N "" -C guacamole-auth -f /etc/guacamole/ssh-auth/portal
  args:
    creates: /etc/guacamole/ssh-auth/portal.pub

- name: Slurp SSH private key from file
  slurp:
    src: /etc/guacamole/ssh-auth/portal
  register: guacamole_private_key_file

- name: Slurp SSH public key from file
  slurp:
    src: /etc/guacamole/ssh-auth/portal.pub
  register: guacamole_public_key_file

- name: Set SSH keypair facts
  set_fact:
    guacamole_ssh_private_key: "{{ guacamole_private_key_file.content | b64decode }}"
    guacamole_ssh_public_key: "{{ guacamole_public_key_file.content | b64decode }}"

- name: Write SSH public key to authorized keys for guacamole SSH user
  authorized_key:
    user: "{{ guacamole_ssh_user }}"
    state: present
    key: "{{ guacamole_ssh_public_key }}"

- name: Write guacamole user mapping file
  template:
    src: user-mapping.xml.j2
    dest: /etc/guacamole/user-mapping.xml

- name: Start guacamole client
  docker_container:
    name: guacamole-client
    image: "{{ guacamole_client_image }}"
    pull: "{{ guacamole_client_image_pull }}"
    container_default_behavior: no_defaults
    detach: yes
    restart_policy: unless-stopped
    network_mode: guacamole
    networks:
      - name: guacamole
    networks_cli_compatible: yes
    published_ports:
      - 8080:8080
    env:
      GUACAMOLE_HOME: /config
      GUACD_HOSTNAME: guacamole-server
    volumes:
      - /etc/guacamole:/config:ro
    state: started
    # Force a restart in case config files have changed
    restart: yes
