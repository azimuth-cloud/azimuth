name: Integration tests

on:
  # We use pull_request_target so that dependabot-created workflows can run
  pull_request_target:
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened
    branches:
      - master

# Use the head ref for workflow concurrency, with cancellation
# This should mean that any previous workflows for a PR get cancelled when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  # Run the unit tests on every PR, even from external repos
  unit_tests:
    uses: ./.github/workflows/tox.yaml
    with:
      ref: ${{ github.event.pull_request.head.sha }}

  # Run the chart linting on every PR, even from external repos
  lint:
    uses: ./.github/workflows/helm-lint.yaml
    with:
      ref: ${{ github.event.pull_request.head.sha }}

  # This job exists so that PRs from outside the main repo are rejected
  fail_on_remote:
    runs-on: ubuntu-latest
    steps:
      - name: PR must be from a branch in the azimuth-cloud/azimuth repo
        run: exit ${{ github.event.pull_request.head.repo.full_name == 'azimuth-cloud/azimuth' && '0' || '1' }}

  publish_artifacts:
    needs: [unit_tests, lint, fail_on_remote]
    uses: ./.github/workflows/build-push-artifacts.yaml
    with:
      ref: ${{ github.event.pull_request.head.sha }}
    secrets: inherit

  run_azimuth_tests:
    needs: [publish_artifacts]
    runs-on: ubuntu-latest
    steps:
      # Check out the configuration repository
      - name: Set up Azimuth environment
        uses: azimuth-cloud/azimuth-config/.github/actions/setup@devel
        with:
          os-clouds: ${{ secrets.OS_CLOUDS }}
          environment-prefix: api-ci
          target-cloud: ${{ vars.TARGET_CLOUD }}
          # Use the version of the chart that we just built
          # The workstation + Kubernetes apps tests are sufficient to exercise the API
          extra-vars: |
            azimuth_chart_repo: https://azimuth-cloud.github.io/azimuth
            azimuth_chart_version: ${{ needs.publish_artifacts.outputs.chart-version }}
            generate_tests_caas_test_case_slurm_enabled: false
            generate_tests_caas_test_case_repo2docker_enabled: false
            generate_tests_caas_test_case_rstudio_enabled: false
            generate_tests_kubernetes_suite_enabled: false
        # GitHub terminates jobs after 6 hours
        # We don't want jobs to acquire the lock then get timed out before they can finish
        # So wait a maximum of 3 hours to acquire the lock, leaving 3 hours for other tasks in the job
        timeout-minutes: 180

      # Provision Azimuth using the azimuth-ops version under test
      - name: Provision Azimuth
        uses: azimuth-cloud/azimuth-config/.github/actions/provision@devel

      # # Run the tests
      - name: Run Azimuth tests
        uses: azimuth-cloud/azimuth-config/.github/actions/test@devel

      #Â Tear down the environment
      - name: Destroy Azimuth
        uses: azimuth-cloud/azimuth-config/.github/actions/destroy@devel
        if: ${{ always() }}
